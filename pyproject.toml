[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-robo-advisor"
version = "0.1.0"
description = "AI robo-advisor to make professional-grade investment strategies, accessible to everyone."
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
keywords = ["ai", "finance", "robo-advisor", "portfolio", "etf", "langchain", "investment"]

authors = [
    { name = "Your Name", email = "you@example.com" }
]

dependencies = [
    "colorama>=0.4.6,<1.0",
    "langchain>=0.3.27,<0.4",
    "langchain-google-genai>=2.1.12,<3.0",
    "langchain-groq>=0.3.8,<0.4",
    "langgraph>=0.6.7,<0.7",
    "numpy>=2.2.0,<3.0",
    "pandas>=2.3.0,<3.0",
    "polygon-api-client>=1.15.0,<2.0",
    "pydantic>=2.11.0,<3.0",
    "python-decouple>=3.8,<4.0",
    "pytz>=2025.1",
    "questionary>=2.1.0,<3.0",
    "typing_extensions>=4.15.0,<5.0",
    "rich>=13.7.1,<14.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.0,<9.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.12.0",
    "ruff>=0.8.0,<1.0",
]
test = [
    "pytest>=8.4.0,<9.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.12.0",
    "pytest-asyncio>=0.21.0",
]

[project.urls]
Repository = "https://github.com/matvix90/ai-robo-advisor"
Issues = "https://github.com/matvix90/ai-robo-advisor/issues"
Documentation = "https://github.com/matvix90/ai-robo-advisor#readme"

[project.scripts]
run-advisor = "main:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "S",   # flake8-bandit (security)
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "RUF", # Ruff-specific rules
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "S101",  # use of assert (common in tests)
    "T201",  # print statements (useful for debugging)
    "S311",  # random generators (not cryptographic use)
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["S101"]  # Allow asserts in tests
"src/main.py" = ["T201"]  # Allow prints in main entry point
